/*
 * Copyright (c) 1994 by Academic Press, Boston, Massachusetts.
 * Written by Douglas A. Gwyn.  Not derived from licensed software.
 * From the book "Software Solutions in C", edited by Dale Schumacher.
 *
 * Permission is granted to anyone to use this software for any
 * purpose on any computer system, and to redistribute it in any way,
 * subject to the following restrictions:
 *
 *   1. The author is not responsible for the consequences of use of
 *	this software, no matter how awful, even if they arise
 *	from defects in it.
 *
 *   2. The origin of this software must not be misrepresented, either
 *	by explicit claim or by omission.
 *
 *   3. Altered versions must be plainly marked as such, and must not
 *	be misrepresented (by explicit claim or omission) as being
 *	the original software.
 *
 *   4. This notice must not be removed or altered.
 */

/*
	<sys/types.h> -- primitive system data types

	public-domain implementation for GS/OS, ORCA/C 2.0

	last edit:	05-Mar-1993	Gwyn@ARL.Army.Mil

	complies with the following standards:
		POSIX	SVID	XPG	AES

	POSIX allows addition of other identifiers ending with "_t", as
	well as inclusion of <sys/types.h> within any other POSIX header.
 */

#ifndef	__sys_types__
#define	__sys_types__	/* typedef isn't idempotent, alas */

typedef char		*caddr_t;	/* byte address (required by AES) */
typedef unsigned long	ino_t;		/* file serial number */
typedef unsigned short	uid_t;		/* user ID */
typedef unsigned short	gid_t;		/* access group ID */
typedef short		nlink_t;	/* link count */
typedef unsigned short	mode_t;		/* file attributes */
#ifndef	__time__	/* XXX -- avoid ORCA/C clash */
/* clock_t is required by SVID, XPG3; should be interlocked, as follows: */
#ifndef	__clock_t__
#define	__clock_t__	/* ORCA/C Standard C header interlock */
typedef unsigned long	clock_t;	/* system time in CLK_TCKs */
#endif
/* time_t is required by SVID, XPG3; should be interlocked, as follows: */
#ifndef	__time_t__
#define	__time_t__	/* ORCA/C Standard C header interlock */
typedef unsigned long	time_t;		/* time in seconds */
#endif
#endif	/* __time__ */
typedef unsigned short	dev_t;		/* device number */
typedef long		off_t;		/* file position offset */
typedef int		key_t;		/* IPC key (req'd. by SVID, XPG3) */
typedef long		pid_t;		/* process ID */

/* Required in <unistd.h> (which must therefore #include <sys/types.h>): */
#ifndef	__size_t__
#define	__size_t__	/* ORCA/C Standard C header interlock */
typedef unsigned long	size_t;		/* C data object size */
#endif
typedef int		ssize_t;	/* returned byte count or error */

/* Left over from earlier release of UNIX System V -- has some uses: */
typedef	long		daddr_t;	/* <disk address> type */

/* Left over from earlier release of UNIX System V -- documentation only: */
#if	0
typedef struct
	{
	short	r[1];
	}		*physadr;
typedef	short		cnt_t;		/* ?<count> type */
typedef	int		label_t[6];
typedef	long		paddr_t;	/* <physical address> type */
typedef	unsigned int	uint;
typedef	unsigned short	ushort;
#endif

/* Additions for GS/OS library implementation (permitted by POSIX): */
typedef unsigned short	Pdate_t;	/* ProDOS date format */
typedef unsigned short	Ptime_t;	/* ProDOS time format */

#endif	/* __sys_types__ */
